<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <description>Shiro与Spring整合</description>
    <!--redis配置-->
    <bean id="redisManager" class="org.crazycake.shiro.RedisManager">
        <property name="host" value="192.168.73.196:6379"></property>
    </bean>

    <!--配置缓存管理器-->
    <bean id="cacheManager" class="org.crazycake.shiro.RedisCacheManager">
        <property name="redisManager" ref="redisManager"></property>
    </bean>
    <!--安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 引用自定义的realm -->
        <property name="realm" ref="authRealm"/>
        <!--配置缓存-->
        <property name="cacheManager" ref="cacheManager"></property>
    </bean>




    <!-- 自定义Realm域的编写 -->
    <bean id="authRealm" class="com.cdx.shiro.AutoRealm">
        <!-- 注入自定义的密码比较器 -->
        <property name="credentialsMatcher" ref="customerCredentialsMatcher" ></property>
    </bean>

    <!-- 自定义的密码比较器 -->
    <bean id="customerCredentialsMatcher" class="com.cdx.shiro.CustomCredentialsMatcher"></bean>

    <!-- filter-name这个名字的值来自于web.xml中filter的名字 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!--登录页面  -->
        <property name="loginUrl" value="/login.jsp"></property>
        <!-- 登录失败后 -->
        <property name="unauthorizedUrl" value="/unauthorized.jsp"></property>

        <!--配置自定义权限过滤器-->
        <property name="filters">
            <map>
                <!--key为过滤器名称，value为过滤器配置bean的id名称-->
                <!--<entry key="myPerms" value="myPermissionFilter"></entry>-->
            </map>
        </property>

        <property name="filterChainDefinitions">
            <!-- /**代表下面的多级目录也过滤 -->
            <value>
                <!--                /system/module/list.do = perms["模块管理"]-->
                <!--访问该路径需要有指定的权限才能访问-->
                <!--模块管理-->
                /system/module/* = perms["模块管理"] <!-- 模块查询 -->
                <!--企业管理-->
                /company/* = perms["企业管理"]
                <!--部门管理-->
                /system/dept/* = perms["部门管理"]
                /system/dept/toAdd.do = perms["查看部门"]
                /system/dept/toUpdate.do = perms["修改部门"]
                /system/dept/delete.do = perms["删除部门"]
                <!--角色管理-->
                /system/role/* = perms["角色管理"]
                <!--日志管理-->
                /system/log/* = perms["日志管理"]
                <!--用户管理-->
                /system/user/* = perms["用户管理"]
                <!--anon匿名访问-->
                /index.jsp* = anon
                /login.jsp* = anon
                /login* = anon
                /logout* = anon
                /css/** = anon
                /img/** = anon
                /plugins/** = anon
                /make/** = anon
                <!--需要登录才能访问-->
                /** = authc
                /*.* = authc
            </value>
        </property>
    </bean>


    <!--开启对shiro注解的支持-->

    <!--  -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 生成代理，通过代理进行控制 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <!-- 安全管理器 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    <aop:aspectj-autoproxy proxy-target-class="true"/>


    <!--配置自定义授权过滤器-->
    <bean id="myPermissionFilter" class="com.cdx.shiro.MyPermissionFilter"></bean>




</beans>